name: Build executable binarys
on: [push, pull_request]
jobs:
  stack-build:
    runs-on: ubuntu-latest
    steps:
    -
      uses: actions/checkout@v2
    -
      uses: actions/setup-haskell@v1
      with:
        enable-stack: true
        stack-version: 'latest'
    -
      uses: actions/cache@v2
      env:
        cache-name: cache-stack
      with:
        path: ~/.stack
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('./package.yaml', './stack.yaml', './stack.yaml.lock') }}
    -
      name: Build binaries
      run: |
        stack --version
        stack build :asmJsonCpp-exe :asmJsonCpp-server
    -
      name: Copy binaries to pwd
      run: |
        cp $(stack path --local-install-root)/bin/* .
    -
      name: Archive asmJsonCpp-exe binary
      uses: actions/upload-artifact@v2
      with:
        name: asmJsonCpp-exe
        path: asmJsonCpp-exe
    -
      name: Archive asmJsonCpp-server binary
      uses: actions/upload-artifact@v2
      with:
        name: asmJsonCpp-server
        path: asmJsonCpp-server
  nix-build:
    runs-on: ubuntu-latest
    steps:
    -
      uses: actions/checkout@v2
    -
      uses: cachix/install-nix-action@v12
      with:
        nix_path: nixpkgs=channel:nixos-unstable
        extra_nix_config: |
          substituters = https://cache.nixos.org https://hydra.iohk.io
          trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
    -
      uses: cachix/cachix-action@v7
      with:
        name: thekk
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
    -
      name: Build executables
      run: nix-build --max-jobs auto
